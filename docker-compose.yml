version: '3.8'

services:
  play-catalog-service:
    image: play.catalog.service
    hostname: play-catalog-service
    container_name: play-catalog-service
    build:
      context: .
      dockerfile: services/catalog/src/Play.Catalog.Service/Dockerfile
    environment:
      - APP_ID=play-catalog-service
      - APP_PORT=5100
      - DAPR_GRPC_PORT=50001
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "5100:80"
      - "50001:50001"
    networks:
      - play-economy
    depends_on:
      - postgres
      - rabbitmq

  play-catalog-service-dapr:
    image: "daprio/daprd:edge"
    container_name: play-catalog-service-dapr
    command: [ "./daprd",
      "--app-id", "play-catalog-service",
      "--app-port", "5100",
      "--dapr-grpc-port", "50001",
      "--placement-host-address", "placement:50006", # Dapr's placement service can be reach via the docker DNS entry
      "--resources-path", "./components",
      "-log-level", "debug"
    ]
    volumes:
      - "./services/catalog/src/Play.Catalog.Service/.components:/components" # Mount our components folder for the runtime to use. The mounted location must match the --resources-path argument.
    networks:
      - play-economy
    depends_on:
      - placement
      - play-catalog-service
    network_mode: "service:play-catalog-service" # Attach the nodeapp-dapr service to the nodeapp network namespace

  play-customer-service:
    image: play.customer.service
    hostname: play-customer-service
    container_name: play-customer-service
    build:
      context: .
      dockerfile: services/customer/src/Play.Customer.Service/Dockerfile
    environment:
      - APP_ID=play-customer-service
      - APP_PORT=5300
      - DAPR_GRPC_PORT=50003
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_ENVIRONMENT=Local
    ports:
      - "5300:80"
      - "50003:50003"
    networks:
      - play-economy
    depends_on:
      - postgres
      - rabbitmq

  play-customer-service-dapr:
    container_name: play-customer-service-dapr
    image: "daprio/daprd:edge"
    command: [
      "./daprd",
      "--app-id", "play-customer-service",
      "--app-port", "5300",
      "--dapr-grpc-port", "50003",
      "--placement-host-address", "placement:50006", # Dapr's placement service can be reach via the docker DNS entry
      "--resources-path", "./components",
      "-log-level", "debug"
    ]
    volumes:
      - "./services/customer/src/Play.Customer.Service/.components:/components" # Mount our components folder for the runtime to use. The mounted location must match the --resources-path argument.
    networks:
      - play-economy
    depends_on:
      - placement
      - play-customer-service
    network_mode: "service:play-customer-service" # Attach the nodeapp-dapr service to the nodeapp network namespace
  
  play-inventory-service:
    image: play.inventory.service
    hostname: play-inventory-service
    container_name: play-inventory-service
    build:
      context: .
      dockerfile: services/inventory/src/Play.Inventory.Service/Dockerfile
    environment:
      - APP_ID=play-inventory-service
      - APP_PORT=5200
      - DAPR_GRPC_PORT=50002
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "5200:80"
      - "50002:50002"
    networks:
      - play-economy
    depends_on:
      - postgres
      - rabbitmq

  play-inventory-service-dapr:
    container_name: play-inventory-service-dapr
    image: "daprio/daprd:edge"
    command: [ "./daprd",
      "--app-id", "play-inventory-service",
      "--app-port", "5200",
      "--dapr-grpc-port", "50002",
      "--placement-host-address", "placement:50006", # Dapr's placement service can be reach via the docker DNS entry
      "--resources-path", "./components",
      "-log-level", "debug"
    ]
    volumes:
      - "./services/inventory/src/Play.Inventory.Service/.components:/components" # Mount our components folder for the runtime to use. The mounted location must match the --resources-path argument.
    networks:
      - play-economy
    depends_on:
      - placement
      - play-inventory-service
    network_mode: "service:play-inventory-service" # Attach the nodeapp-dapr service to the nodeapp network namespace

  placement:
    image: "daprio/dapr"
    container_name: dapr-placement
    command: [ "./placement", "--port", "50006" ]
    ports:
      - "50006:50006"

  rabbitmq:
    container_name: rabbitmq
    hostname: rabbitmq
    image: rabbitmq:3-management-alpine
    restart: unless-stopped
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - play-economy

  postgres:
    container_name: postgres
    hostname: postgres
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - play-economy

  pgadmin:
    container_name: pgadmin
    hostname: pgadmin
    image: dpage/pgadmin4
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - play-economy
    depends_on:
      - postgres

networks:
  play-economy:

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  rabbitmq_data:
    driver: local